<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Real-Time Products</title>
<style>
    /* Estilos para el contenedor y las tarjetas de productos */
    .product-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 10px;
        margin-top: 20px;
    }
    .product-card {
        width: 200px;
        height: auto; /* Cambié la altura a auto para que se ajuste al contenido */
        border: 1px solid #ccc;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
        padding: 10px; /* Ajusté el padding para mayor espacio */
        overflow: hidden;
    }
    .product-card img {
        width: 50px;
        height: 50px;
        border-radius: 2px;
        margin-bottom: 5px; /* Ajusté el margen entre la imagen y el contenido */
        object-fit: contain;
    }
    .product-title {
        font-size: 0.9em; /* Ajusté el tamaño del título */
        font-weight: bold;
        margin: 5px 0; /* Ajusté el margen */
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
    .product-info {
        font-size: 0.8em; /* Ajusté el tamaño del texto */
        margin: 5px 0;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
    .product-details {
        display: flex;
        flex-direction: column; /* Asegura que el precio y el código estén en una columna */
        align-items: center;
        margin-top: 10px;
    }

    .product-code {
        font-size: 0.7em; /* Tamaño del texto para el código */
        color: #333; /* Color gris oscuro para el código */
        margin: 3px 0;
    }
</style>

</head>
<body>
    <div class="container">
        <h1>Lista de Productos en Tiempo Real</h1>
        
        <!-- Contenedor de cuadrícula para las tarjetas de productos -->
        <div id="productList" class="product-grid">
            <!-- Tarjetas de productos generadas dinámicamente -->
        </div>

        <!-- Formulario para agregar un producto -->
        <form id="addProductForm">
            <table>
                <tr>
                    <td><label for="title">Título:</label></td>
                    <td><input type="text" id="title" name="title" required></td>
                </tr>
                <tr>
                    <td><label for="description">Descripción:</label></td>
                    <td><input type="text" id="description" name="description" required></td>
                </tr>
                <tr>
                    <td><label for="price">Precio:</label></td>
                    <td><input type="number" id="price" name="price" required></td>
                </tr>
                <tr>
                    <td><label for="code">Código:</label></td>
                    <td><input type="text" id="code" name="code" required></td>
                </tr>
                <tr>
                    <td><label for="stock">Stock:</label></td>
                    <td><input type="number" id="stock" name="stock" required></td>
                </tr>
                <tr>
                    <td><label for="category">Categoría:</label></td>
                    <td>
                        <select id="category" name="category" required>
                            <option value="" disabled selected>Selecciona una categoría</option>
                            <option value="nuecesysemillas">nuecesysemillas</option>
                            <option value="frutossecos">frutossecos</option>
                            <option value="legumbresseca">legumbressecas</option>
                            <option value="frutossecostostados">frutossecostostados</option>
                            <option value="mixfrutossecos">mixfrutossecos</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td><label for="thumbnail">Thumbnail:</label></td>
                    <td><input type="text" id="thumbnail" name="thumbnail"></td>
                </tr>
                <tr>
                    <td><label for="status">Status:</label></td>
                    <td><input type="checkbox" id="status" name="status" value="true"></td>
                </tr>
            </table>
            <button type="submit">Agregar Producto</button>
            <button type="button" id="deleteProductButton">Eliminar Producto</button>
        </form>
        <!-- Agregar un campo para seleccionar el producto a modificar -->
<div>
    <label for="updateProductId">ID del Producto a Modificar:</label>
    <input type="text" id="updateProductId" name="updateProductId">
</div>

<!-- Modificar Producto -->
<form id="updateProductForm">
    <table>
        <tr>
            <td><label for="updateTitle">Título:</label></td>
            <td><input type="text" id="updateTitle" name="title" required></td>
        </tr>
        <tr>
            <td><label for="updateDescription">Descripción:</label></td>
            <td><input type="text" id="updateDescription" name="description" required></td>
        </tr>
        <tr>
            <td><label for="updatePrice">Precio:</label></td>
            <td><input type="number" id="updatePrice" name="price" required></td>
        </tr>
        <tr>
            <td><label for="updateStock">Stock:</label></td>
            <td><input type="number" id="updateStock" name="stock" required></td>
        </tr>
        <tr>
            <td><label for="updateCategory">Categoría:</label></td>
            <td>
                <select id="updateCategory" name="category" required>
                    <option value="nuecesysemillas">nuecesysemillas</option>
                    <option value="frutossecos">frutossecos</option>
                    <option value="legumbresseca">legumbressecas</option>
                    <option value="frutossecostostados">frutossecostostados</option>
                    <option value="mixfrutossecos">mixfrutossecos</option>
                </select>
            </td>
        </tr>
    </table>

</form>

<!-- Botón de eliminar y modificar -->

     <!-- Campo para ingresar el ID del producto a eliminar -->
        <div>
            <label for="deleteProductId">ID del Producto a Eliminar:</label>
            <input type="text" id="deleteProductId" name="deleteProductId">
        </div>
    </div>

    <button type="submit">Modificar Producto</button>

   

    <!-- Mensaje de estado fijo en la parte inferior -->
    <div id="statusMessage" style="position: fixed; bottom: 0; width: 100%; background-color: #92cdae; color: #036400; text-align: center; padding: 10px; display: none;"></div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        document.getElementById('updateProductForm').addEventListener('submit', (event) => {
    event.preventDefault();

    const productId = document.getElementById('updateProductId').value; // Obtener el ID del producto
    if (!productId) {
        alert('Por favor, ingresa un ID de producto válido.');
        return;
    }

    // Obtener los datos del formulario
    const formData = new FormData(event.target);
    const updatedProduct = {};
    formData.forEach((value, key) => {
        updatedProduct[key] = value;
    });

    // Enviar la solicitud al servidor para actualizar el producto
    socket.emit('productUpdated', { id: productId, updatedProduct });

    // Limpiar el formulario
    event.target.reset();
});

        // Manejar el envío del formulario para agregar producto
        document.getElementById('addProductForm').addEventListener('submit', (event) => {
            event.preventDefault();

            // Obtener los datos del formulario
            const formData = new FormData(event.target);
            const product = {};
            formData.forEach((value, key) => {
                if (key === 'stock'){
                    product[key] = parseFloat(value);
                } else {
                    product[key] = value;
                }
            });
   
            // Enviar el producto al servidor
            socket.emit('productAdded', product);

            // Limpiar el formulario
            event.target.reset();
        });

        // Manejar el clic en el botón de eliminar producto
        document.getElementById('deleteProductButton').addEventListener('click', () => {
            const productId = document.getElementById('deleteProductId').value;
            if (productId) {
                socket.emit('productDeleted', productId);
                document.getElementById('deleteProductId').value = ''; 
            }
        });

        // Actualizar productos en tiempo real
        socket.on('updateProducts', ({ products, message }) => {
            products.sort((a, b) => parseInt(a.code) - parseInt(b.code));

            const productList = document.getElementById('productList');
            productList.innerHTML = '';  // Limpiar lista de productos

            // Crear una tarjeta para cada producto
            products.forEach(product => {
                const card = document.createElement('div');
                card.classList.add('product-card');
                
                card.innerHTML = `
                    <img src="${product.thumbnails}" alt="Thumbnail">
                    <div class="product-title">${product.title}</div>
                    <div class="product-info">Descripción: ${product.description}</div>
                    <div class="product-info">Código: ${product.code}</div>
                    <div class="product-info">Precio: ${product.price}</div>
                    <div class="product-info">Stock: ${product.stock}</div>
                    <div class="product-info">Categoría: ${product.category}</div>
                    <div class="product-info">Status: ${product.status}</div>
                `;
                
                productList.appendChild(card);
            });

            // Mostrar mensaje de éxito o error si existe
            const statusMessage = document.getElementById('statusMessage');
            if (message) {
                statusMessage.textContent = message;
                statusMessage.style.display = 'block';

                // Ocultar el mensaje después de 10 segundos
                setTimeout(() => {
                    statusMessage.style.display = 'none';
                }, 10000); 
            }
        });
    </script>
</body>
</html>
